#### Network Configuration

###3.1.1 Network Parameters (Host Only)

---

- name: "3.1.1 | PATCH | Ensure system is checked to determine if IPv6 is enabled"
  block:
      - name: "3.1.1 | PATCH | Ensure system is checked to determine if IPv6 is enabled | Replace ipv6.disable if it exists"
        ansible.builtin.replace:
            path: /etc/default/grub
            regexp: '^(GRUB_CMDLINE_LINUX=.*)\bipv6\.disable=\d\b(.*$)'
            replace: '\1ipv6.disable=1\2'
        when: ubtu22cis_ipv6_disable == 'grub'
        register: ipv6disable_replaced
        notify: Grub update

      - name: "3.1.1 | PATCH | Ensure system is checked to determine if IPv6 is enabled | Check grub cmdline linux"
        ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_3_1_1_cmdline_settings

      - name: "3.1.1 | PATCH | Ensure system is checked to determine if IPv6 is enabled | Insert ipv6.disable if it doesn't exist"
        ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^(GRUB_CMDLINE_LINUX=".*)"$'
            line: '\1 ipv6.disable=1"'
            backrefs: true
        when:
            - ubtu22cis_ipv6_disable == 'grub'
            - ipv6disable_replaced is not changed
            - "'ipv6.disable' not in ubtu22cis_3_1_1_cmdline_settings.stdout"
        notify: Grub update

      - name: "3.1.1 | PATCH | Ensure system is checked to determine if IPv6 is enabled | Remove net.ipv6.conf.all.disable_ipv6"
        ansible.builtin.template:
            src: "{{ item }}.j2"
            dest: "/{{ item }}"
            owner: root
            group: root
            mode: '0640'
        notify: Flush ipv6 route table
        loop:
            - etc/sysctl.d/60-disable_ipv6.conf
        when: ubtu22cis_ipv6_disable == 'sysctl'
  when:
      - ubtu22cis_rule_3_1_1
      - not ubtu22cis_ipv6_required
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.1.1
      - ipv6

- name: "PRELIM | PATCH | Install Network-Manager"
  ansible.builtin.package:
      name: network-manager
      state: present
  when:
      - ubtu22cis_rule_3_1_2
      - ubtu22cis_install_network_manager
      - not system_is_container
      - "'network-manager' not in ansible_facts.packages"
  tags:
      - always

- name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled"
  block:
      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Check for network-manager tool"
        ansible.builtin.shell: nmcli radio wifi
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_3_1_2_wifi_status
        when: "'network-manager' in ansible_facts.packages"

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Disable wireless if network-manager installed"
        ansible.builtin.shell: nmcli radio all off
        changed_when: ubtu22cis_3_1_2_nmcli_radio_off.rc == 0
        register: ubtu22cis_3_1_2_nmcli_radio_off
        when:
            - "'network-manager' in ansible_facts.packages"
            - "'enabled' in ubtu22cis_3_1_2_wifi_status.stdout"

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Warn about wireless if network-manager not installed"
        ansible.builtin.debug:
            msg: "Warning!! You need to disable wireless interfaces manually since network-manager is not installed"
        when: "'network-manager' not in ansible_facts.packages"

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        when: "'network-manager' not in ansible_facts.packages"
  vars:
      warn_control_id: '3.1.2'
  when:
      - ubtu22cis_rule_3_1_2
  tags:
      - level1-server
      - level2-workstation
      - automated
      - patch
      - rule_3.1.2
      - wireless

###3.2.x  Ensure packet redirect sending is disabled

- name: "3.2.1 | PATCH | Ensure packet redirect sending is disabled"
  ansible.posix.sysctl:
      name: "{{ item }}"
      value: '0'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - net.ipv4.conf.all.send_redirects
      - net.ipv4.conf.default.send_redirects
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_2_1
      - not ubtu22cis_is_router
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.2.1
      - packet_redirect
      - sysctl

- name: "3.2.2 | PATCH | Ensure IP forwarding is disabled"
  block:
      - name: "3.2.2 | PATCH | Ensure IP forwarding is disabled | IPv4 settings"
        ansible.posix.sysctl:
            name: net.ipv4.ip_forward
            value: '0'
            sysctl_set: true
            sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
            state: present
            reload: true
            ignoreerrors: true
        notify:
            - Flush ipv4 route table

      - name: "3.2.2 | PATCH | Ensure IP forwarding is disabled | IPv6 settings"
        ansible.posix.sysctl:
            name: net.ipv6.conf.all.forwarding
            value: '0'
            sysctl_set: true
            sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
            state: present
            reload: true
            ignoreerrors: true
        when: ubtu22cis_ipv6_disable == 'sysctl'
        notify:
            - Flush ipv6 route table

  when:
      - ubtu22cis_rule_3_2_2
      - not ubtu22cis_is_router
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.2.2
      - ip_forwarding
      - sysctl


###3.3.x Network Parameters (Host and Router)
- name: "3.3.1 | PATCH | Ensure source routed packets are not accepted"
  block:
      - name: "3.3.1 | PATCH | Ensure source routed packets are not accepted | IPv4 settings"
        ansible.posix.sysctl:
            name: "{{ item }}"
            value: '0'
            sysctl_set: true
            sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - net.ipv4.conf.all.accept_source_route
            - net.ipv4.conf.default.accept_source_route
        notify: Flush ipv4 route table

      - name: "3.3.1 | PATCH | Ensure source routed packets are not accepted | IPv6 settings"
        ansible.posix.sysctl:
            name: "{{ item }}"
            value: '0'
            sysctl_set: true
            sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
            state: present
            reload: true
            ignoreerrors: true
        when: ubtu22cis_ipv6_disable == 'sysctl'
        with_items:
            - net.ipv6.conf.all.accept_source_route
            - net.ipv6.conf.default.accept_source_route
        notify: Flush ipv6 route table
  when:
      - ubtu22cis_rule_3_3_1
      - not ubtu22cis_is_router
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.1
      - routed_packets
      - sysctl

- name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted"
  block:
      - name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted | IPv4 settings"
        ansible.posix.sysctl:
            name: "{{ item }}"
            value: '0'
            sysctl_set: true
            sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - net.ipv4.conf.all.accept_redirects
            - net.ipv4.conf.default.accept_redirects
        notify: Flush ipv4 route table

      - name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted | IPv6 settings"
        ansible.posix.sysctl:
            name: "{{ item }}"
            value: '0'
            sysctl_set: true
            sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
            state: present
            reload: true
            ignoreerrors: true
        when: ubtu22cis_ipv6_disable == 'sysctl'
        with_items:
            - net.ipv6.conf.all.accept_redirects
            - net.ipv6.conf.default.accept_redirects
        notify: Flush ipv6 route table
  when:
      - ubtu22cis_rule_3_3_2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.2
      - icmp
      - sysctl

- name: "3.3.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  ansible.posix.sysctl:
      name: "{{ item }}"
      value: '0'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - net.ipv4.conf.all.secure_redirects
      - net.ipv4.conf.default.secure_redirects
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_3_3
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.3
      - icmp
      - sysctl

- name: "3.3.4 | PATCH | Ensure suspicious packets are logged"
  ansible.posix.sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - net.ipv4.conf.all.log_martians
      - net.ipv4.conf.default.log_martians
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_3_4
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.4
      - suspicious_packets
      - sysctl

- name: "3.3.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  ansible.posix.sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: '1'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_3_5
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.5
      - icmp
      - sysctl

- name: "3.3.6 | PATCH | Ensure bogus ICMP responses are ignored"
  ansible.posix.sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: '1'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_3_6
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.6
      - icmp
      - sysctl

- name: "3.3.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  ansible.posix.sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - net.ipv4.conf.all.rp_filter
      - net.ipv4.conf.default.rp_filter
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_3_7
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.7
      - reverse_path_filtering
      - sysctl

- name: "3.3.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  ansible.posix.sysctl:
      name: net.ipv4.tcp_syncookies
      value: '1'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  notify: Flush ipv4 route table
  when:
      - ubtu22cis_rule_3_3_8
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.8
      - tcp_syn_cookies
      - sysctl

- name: "3.3.9 | PATCH | Ensure IPv6 router advertisements are not accepted"
  ansible.posix.sysctl:
      name: "{{ item }}"
      value: '0'
      sysctl_set: true
      sysctl_file: "{{ ubtu22cis_sysctl_network_conf }}"
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - net.ipv6.conf.all.accept_ra
      - net.ipv6.conf.default.accept_ra
  notify: Flush ipv6 route table
  when:
      - ubtu22cis_rule_3_3_9
      - ubtu22cis_ipv6_required
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.3.9
      - ipv6
      - router_advertisements
      - sysctl


###3.5.1.x Ensure firewall rules are implemented

- name: "3.5.1.1 | PATCH | Ensure ufw is installed"
  ansible.builtin.package:
      name: ufw
      state: present
  when:
      - ubtu22cis_rule_3_5_1_1
      - "'ufw' not in ansible_facts.packages"
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.1
      - apt
      - ufw

- name: "3.5.1.2 | PATCH | Ensure iptables-persistent is not installed with ufw"
  ansible.builtin.package:
      name: iptables-persistent
      state: absent
  when:
      - ubtu22cis_rule_3_5_1_2
      - "'iptables-persistent' in ansible_facts.packages"
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.2
      - ufw

# Adding the allow OpenSSH rule while enabling ufw to allow ansible to run after enabling
- name: "3.5.1.3 | PATCH | Ensure ufw service is enabled"
  block:
      - name: "3.5.1.3 | PATCH | Ensure ufw service is enabled | ssh port enabled"
        community.general.ufw:
            rule: allow
            name: OpenSSH
            state: enabled

      - name: "3.5.1.3 | PATCH | Ensure ufw service is enabled | service"
        ansible.builtin.systemd:
            name: ufw
            enabled: true
            state: started
            masked: false
  when:
      - ubtu22cis_rule_3_5_1_3
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.3
      - ufw

- name: "3.5.1.4 | PATCH | Ensure loopback traffic is configured"
  block:
      - name: "3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set allow in ufw rules"
        community.general.ufw:
            rule: allow
            direction: in
            interface: lo
        notify: Reload ufw

      - name: "3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set allow out ufw rules"
        community.general.ufw:
            rule: allow
            direction: out
            interface: lo
        notify: Reload ufw

      - name: "3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv4"
        community.general.ufw:
            rule: deny
            direction: in
            from_ip: 127.0.0.0/8
        notify: Reload ufw

      - name: "3.5.1.4 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv6"
        community.general.ufw:
            rule: deny
            direction: in
            from_ip: '::1'
        when: 
        - ubtu22cis_ipv6_required
        - ubtu22cis_firewall_package == "ufw"

        
        notify: Reload ufw
  when:
      - ubtu22cis_rule_3_5_1_4
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.4
      - ufw

- name: "3.5.1.5 | PATCH | Ensure ufw outbound connections are configured"
  block:
      - name: "3.5.1.5 | PATCH | Ensure ufw outbound connections are configured | Custom ports"
        community.general.ufw:
            rule: allow
            direction: out
            to_port: '{{ item }}'
        with_items:
            - "{{ ubtu22cis_ufw_allow_out_ports }}"
        notify: Reload ufw
        when: 
        - ubtu22cis_ufw_allow_out_ports != "all"
        - ubtu22cis_firewall_package == "ufw"

      - name: "3.5.1.5 | PATCH | Ensure ufw outbound connections are configured | Allow all"
        community.general.ufw:
            rule: allow
            direction: out
        notify: Reload ufw
        when: 
        - "'all' in ubtu22cis_ufw_allow_out_ports"
        - ubtu22cis_firewall_package == "ufw"
  when:
      - ubtu22cis_rule_3_5_1_5
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_3.5.1.5
      - ufw

- name: "3.5.1.6 | AUDIT | Ensure ufw firewall rules exist for all open ports"
  block:
      - name: "3.5.1.6 | AUDIT | Ensure ufw firewall rules exist for all open ports | Get list of open ports"
        ansible.builtin.shell: ss -4tuln
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_3_5_1_6_open_listen_ports

      - name: "3.5.1.6 | AUDIT | Ensure ufw firewall rules exist for all open ports | Get list of firewall rules"
        ansible.builtin.shell: ufw status
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_3_5_1_6_firewall_rules

      - name: "3.5.1.6 | AUDIT | Ensure ufw firewall rules exist for all open ports | Message out settings"
        ansible.builtin.debug:
            msg:
                - "Warning!! Below are the listening ports and firewall rules"
                - "Please create firewall rule for any open ports if not already done"
                - "*****---Open Listen Ports---*****"
                - "{{ ubtu22cis_3_5_1_6_open_listen_ports.stdout_lines }}"
                - "*****---Firewall Rules---*****"
                - "{{ ubtu22cis_3_5_1_6_firewall_rules.stdout_lines }}"

      - name: "3.5.1.6 | AUDIT | Ensure ufw firewall rules exist for all open ports | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.1.6'
  when:
      - ubtu22cis_rule_3_5_1_6
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_3.5.1.6
      - ufw

- name: "3.5.1.7 | PATCH | Ensure ufw default deny firewall policy"
  community.general.ufw:
      default: deny
      direction: "{{ item }}"
  notify: Reload ufw
  with_items:
      - incoming
      - outgoing
      - routed
  when:
      - ubtu22cis_rule_3_5_1_7
      - ubtu22cis_firewall_package == "ufw"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.7
      - ufw


###3.5.2.x Ensure nftables is installed

# ---------------
# ---------------
# NFTables is unsupported with this role. However I have the actions commented out as a guide
# ---------------
# ---------------
- name: "3.5.2.1 | AUDIT | Ensure nftables is installed"
  block:
      - name: "3.5.2.1 | AUDIT | Ensure nftables is installed | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"

      - name: "3.5.2.1 | AUDIT | Ensure nftables is installed | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.1'
  when:
      - ubtu22cis_rule_3_5_2_1
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.1
      - nftables

- name: "3.5.2.2 | AUDIT | Ensure ufw is uninstalled or disabled with nftables"
  block:
      - name: "3.5.2.2 | AUDIT | Ensure ufw is uninstalled or disabled with nftables | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"
            # ansible.builtin.package:
            #     name: ufw
            #     state: absent

      - name: "3.5.2.2 | AUDIT | Ensure ufw is uninstalled or disabled with nftables | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.2'
  when:
      - ubtu22cis_rule_3_5_2_2
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.2
      - nftables

- name: "3.5.2.3 | AUDIT | Ensure iptables are flushed with nftables"
  block:
      - name: "3.5.2.3 | AUDIT | Ensure iptables are flushed with nftables | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"
            # ansible.builtin.iptables:
            #     flush: yes

      - name: "3.5.2.3 | AUDIT | Ensure iptables are flushed with nftables | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.3'
  when:
      - ubtu22cis_rule_3_5_2_3
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_3.5.2.3
      - nftables

- name: "3.5.2.4 | AUDIT | Ensure a nftables table exists"
  block:
      - name: "3.5.2.4 | AUDIT | Ensure a nftables table exists"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables | Message out warning"
            # ansible.builtin.shell: "nft create table {{ ubtu22cis_nftables_table_name }}"
            # changed_when: ubtu22cis_3_5_2_4_new_table.rc == 0
            # failed_when: false
            # check_mode: false
            # register: ubtu22cis_3_5_2_4_new_table

      - name: "3.5.2.4 | AUDIT | Ensure a nftables table exists | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.4'
  when:
      - ubtu22cis_rule_3_5_2_4
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.2.4
      - nftables

- name: "3.5.2.5 | AUDIT | Ensure nftables base chains exist"
  block:
      - name: "3.5.2.5 | AUDIT | Ensure nftables base chains exist"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables | Message out warning"

      - name: "3.5.2.5 | AUDIT | Ensure nftables base chains exist | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.5'
  when:
      - ubtu22cis_rule_3_5_2_5
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.5
      - nftables

- name: "3.5.2.6 | AUDIT | Ensure nftables loopback traffic is configured"
  block:
      - name: "3.5.2.6 | AUDIT | Ensure nftables loopback traffic is configured | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"

      - name: "3.5.2.6 | AUDIT | Ensure nftables loopback traffic is configured | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.6'
  when:
      - ubtu22cis_rule_3_5_2_6
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.6
      - nftables

- name: "3.5.2.7 | AUDIT | Ensure nftables outbound and established connections are configured"
  block:
      - name: "3.5.2.7 | AUDIT | Ensure nftables outbound and established connections are configured | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"

      - name: "3.5.2.7 | AUDIT | Ensure nftables outbound and established connections are configured | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.7'
  when:
      - ubtu22cis_rule_3_5_2_7
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_3.5.2.7
      - nftables

- name: "3.5.2.8 | AUDIT | Ensure nftables default deny firewall policy"
  block:
      - name: "3.5.2.8 | AUDIT | Ensure nftables default deny firewall policy | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"

      - name: "3.5.2.8 | AUDIT | Ensure nftables default deny firewall policy | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.8'
  when:
      - ubtu22cis_rule_3_5_2_8
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.8
      - nftables

- name: "3.5.2.9 | AUDIT | Ensure nftables service is enabled"
  block:
      - name: "3.5.2.9 | AUDIT | Ensure nftables service is enabled | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"
            # ansible.builtin.service:
            #     name: nftables
            #     state: started
            #     enabled: yes

      - name: "3.5.2.9 | AUDIT | Ensure nftables service is enabled | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.9'
  when:
      - ubtu22cis_rule_3_5_2_9
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.9
      - nftables

- name: "3.5.2.10 | AUDIT | Ensure nftables rules are permanent"
  block:
      - name: "3.5.2.10 | AUDIT | Ensure nftables rules are permanent | Message out warning"
        ansible.builtin.debug:
            msg: "Warning!! NFTables is not supported in this role. Please use UFW, iptables, or manually manage nftables"

      - name: "3.5.2.10 | AUDIT | Ensure nftables rules are permanent | Set warning count"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '3.5.2.10'
  when:
      - ubtu22cis_rule_3_5_2_10
      - ubtu22cis_firewall_package == "nftables"
  tags:
      - level1-server
      - level1-workstation
      - automated
      - audit
      - rule_3.5.2.10
      - nftables





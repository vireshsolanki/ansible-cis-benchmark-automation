### Ensure attributes related to auditd


---


- name: "PRELIM | PATCH | Ensure auditd is installed"
  block:
      - name: "PRELIM | PATCH | Ensure auditd is installed"
        ansible.builtin.package:
            name: ['auditd', 'audispd-plugins']
            state: present
        when:
            - "'auditd' not in ansible_facts.packages or
              'auditd-plugins' not in ansible_facts.packages"

      - name: "PRELIM | AUDIT | Audit conf and rules files | list files"
        ansible.builtin.find:
            path: /etc/audit/
            file_type: file
            recurse: true
            patterns: '*.conf,*.rules'
        register: auditd_conf_files

  when:
      - ubtu22cis_rule_4_1_1_1 or
        ubtu22cis_rule_4_1_4_5 or
        ubtu22cis_rule_4_1_4_6 or
        ubtu22cis_rule_4_1_4_7
  tags:
      - level2-server
      - level2-workstation
      - patch
      - auditd
      - always


- name: "4.1.1.1 | PATCH | Ensure auditd is installed"
  ansible.builtin.package:
      name: ['auditd', 'audispd-plugins']
      state: present
  when:
      - ubtu22cis_rule_4_1_1_1
      - "'auditd' not in ansible_facts.packages or
        'auditd-plugins' not in ansible_facts.packages"
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.1.1
      - auditd

- name: "4.1.1.2 | PATCH | Ensure auditd service is enabled"
  ansible.builtin.service:
      name: auditd
      state: started
      enabled: true
  when:
      - ubtu22cis_rule_4_1_1_2
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.1.2
      - auditd

- name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
  block:
      - name: "4.1.1.3 | AUDIT | Ensure auditing for processes that start prior to auditd is enabled | Get GRUB_CMDLINE_LINUX"
        ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_4_1_1_3_cmdline_settings

      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled | Add setting if doesn't exist"
        ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ ubtu22cis_4_1_1_3_cmdline_settings.stdout }} audit=1"'
        when: "'audit=' not in ubtu22cis_4_1_1_3_cmdline_settings.stdout"
        notify: Grub update

      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled | Update setting if exists"
        ansible.builtin.replace:
            dest: /etc/default/grub
            regexp: 'audit=([0-9]+)'
            replace: 'audit=1'
            after: '^GRUB_CMDLINE_LINUX="'
            before: '"'
        notify: Grub update
        when: "'audit=' in ubtu22cis_4_1_1_3_cmdline_settings.stdout"
  when:
      - ubtu22cis_rule_4_1_1_3
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.1.3
      - auditd

- name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient"
  block:
      - name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient | Get current GRUB_CMDLINE_LINUX"
        ansible.builtin.shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubtu22cis_4_1_1_4_cmdline_settings

      - name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient | Add setting if doesn't exist"
        ansible.builtin.lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ ubtu22cis_4_1_1_4_cmdline_settings.stdout }} audit_backlog_limit={{ ubtu22cis_audit_back_log_limit }}"'
        notify: Grub update
        when: "'audit_backlog_limit=' not in ubtu22cis_4_1_1_4_cmdline_settings.stdout"

      - name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient | Update setting if exists"
        ansible.builtin.replace:
            dest: /etc/default/grub
            regexp: 'audit_backlog_limit=([0-9]+)'
            replace: 'audit_backlog_limit={{ ubtu22cis_audit_back_log_limit }}'
            after: '^GRUB_CMDLINE_LINUX="'
            before: '"'
        notify: Grub update
  when:
      - ubtu22cis_rule_4_1_1_4
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.1.4
      - auditd

- name: "4.1.2.1 | PATCH | Ensure audit log storage size is configured"
  ansible.builtin.lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^max_log_file( |=)"
      line: "max_log_file = {{ ubtu22cis_max_log_file_size }}"
      state: present
  register: rule_4_1_2_1
  notify: Restart auditd
  when:
      - ubtu22cis_rule_4_1_2_1
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.2.1
      - auditd

- name: "4.1.2.2 | PATCH | Ensure audit logs are not automatically deleted"
  ansible.builtin.lineinfile:
      path: /etc/audit/auditd.conf
      regexp: '^max_log_file_action'
      line: "max_log_file_action = {{ ubtu22cis_auditd['max_log_file_action'] }}"
  register: rule_4_1_2_2
  notify: Restart auditd
  when:
      - ubtu22cis_rule_4_1_2_2
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.2.2
      - auditd

- name: "4.1.2.3 | PATCH | Ensure system is disabled when audit logs are full"
  ansible.builtin.lineinfile:
      path: /etc/audit/auditd.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
  register: rule_4_1_2_3
  notify: Restart auditd
  with_items:
      - { regexp: '^space_left_action', line: "space_left_action = {{ ubtu22cis_auditd['space_left_action'] }}" }
      - { regexp: '^action_mail_acct', line: "action_mail_acct = {{ ubtu22cis_auditd['action_mail_acct'] }}" }
      - { regexp: '^admin_space_left_action', line: "admin_space_left_action = {{ ubtu22cis_auditd['admin_space_left_action'] }}" }
  when:
      - ubtu22cis_rule_4_1_2_3
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.2.3
      - auditd

- name: "4.1.3.1 | PATCH | Ensure changes to system administration scope (sudoers) is collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_1
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.1
      - auditd

- name: "4.1.3.2 | PATCH | Ensure actions as another user are always logged"
  ansible.builtin.set_fact:
      update_audit_template: true
  notify: restart auditd
  when:
      - ubtu22cis_rule_4_1_3_2
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.2
      - auditd

- name: "4.1.3.3 | PATCH | Ensure events that modify the sudo log file are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  notify: restart auditd
  when:
      - ubtu22cis_rule_4_1_3_3
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.3
      - auditd

- name: "4.1.3.4 | PATCH | Ensure events that modify date and time information are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_4
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.4
      - auditd

- name: "4.1.3.5 | PATCH | Ensure events that modify the system's network environment are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_5
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.5
      - auditd

- name: "4.1.3.6 | PATCH | Ensure use of privileged commands is collected"
  block:
      - name: "4.1.3.6 | AUDIT | Ensure use of privileged commands is collected | Get list of privileged programs"
        ansible.builtin.shell: for i in  $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv "noexec|nosuid" | awk '{print $1}'); do find $i -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null; done
        register: priv_procs
        changed_when: false
        check_mode: false

      - name: "4.1.3.6 | PATCH | Ensure use of privileged commands is collected | Set privileged rules"
        ansible.builtin.set_fact:
            update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_6
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.6
      - auditd

- name: "4.1.3.7 | PATCH | Ensure unsuccessful unauthorized file access attempts are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_7
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.7
      - auditd

- name: "4.1.3.8 | PATCH | Ensure events that modify user/group information are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_8
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.8
      - auditd

- name: "4.1.3.9 | PATCH | Ensure discretionary access control permission modification events are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_9
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.9
      - auditd

- name: "4.1.3.10 | PATCH | Ensure successful file system mounts are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      ubtu22cis_rule_4_1_3_10
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.10
      - auditd

- name: "4.1.3.11 | PATCH | Ensure session initiation information is collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_11
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.11
      - auditd

- name: "4.1.3.12 | PATCH | Ensure login and logout events are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_12
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.12
      - auditd

- name: "4.1.3.13 | PATCH | Ensure file deletion events by users are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_13
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.13
      - auditd

- name: "4.1.3.14 | PATCH | Ensure events that modify the system's Mandatory Access Controls are collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_14
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.14
      - auditd

- name: "4.1.3.15 | PATCH | Ensure successful and unsuccessful attempts to use the chcon command are recorded"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_15
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.15
      - auditd

- name: "4.1.3.16 | PATCH | Ensure successful and unsuccessful attempts to use the setfacl command are recorded"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_16
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.16
      - auditd

- name: "4.1.3.17 | PATCH | Ensure successful and unsuccessful attempts to use the chacl command are recorded"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_17
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.17
      - auditd

- name: "4.1.3.18 | PATCH | Ensure successful and unsuccessful attempts to use the usermod command are recorded"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_18
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.18
      - auditd

- name: "4.1.3.19 | PATCH | Ensure kernel module loading and unloading is collected"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_19
  tags:
      - level2-server
      - level2-workstation
      - automated
      - patch
      - rule_4.1.3.19
      - auditd

- name: "4.1.3.20 | PATCH | Ensure the audit configuration is immutable"
  ansible.builtin.set_fact:
      update_audit_template: true
  when:
      - ubtu22cis_rule_4_1_3_20
  tags:
      - level2-server
      - level2-workstation
      - automated
      - scored
      - patch
      - rule_4.1.3.20
      - auditd

- name: "4.1.3.21 | PATCH | Ensure the running and on disk configuration is the same"
  ansible.builtin.shell: augenrules --check
  changed_when: false
  register: ubtu22cis_rule_4_1_3_21_augen_check
  when:
      - ubtu22cis_rule_4_1_3_21
  tags:
      - level2-server
      - level2-workstation
      - automated
      - scored
      - patch
      - rule_4.1.3.21
      - auditd


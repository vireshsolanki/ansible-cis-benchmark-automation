---

###### 1.1.1.x Mounting Squashfs cramfs udf filesystem
- name: "1.1.1.1 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "1.1.1.1 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: "install squashfs /bin/true"
            create: true
            mode: '0600'

      - name: "1.1.1.1 | PATCH | Ensure mounting of squashfs filesystems is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist squashfs(\\s|$)"
            line: "blacklist squashfs"
            create: true
            mode: '0600'

      - name: "1.1.1.1 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
        community.general.modprobe:
            name: squashfs
            state: absent
        when: not system_is_container

  when:
      - amzn2023cis_rule_1_1_1_1
  tags:
      - level2-server
      - patch
      - rule_1.1.1.1
      - squashfs
      - nist_sp800-53r5_CM-7

- name: "1.1.1.2 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "1.1.1.2 | PATCH | Ensure mounting of udf filesystems is disable | Edit modprobe config"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: "install udf /bin/true"
            create: true
            mode: '0600'

      - name: "1.1.1.2 | PATCH | Ensure mounting of udf filesystems is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist udf(\\s|$)"
            line: "blacklist udf"
            create: true
            mode: '0600'

      - name: "1.1.1.2 | PATCH | Ensure mounting of udf filesystems is disable | Disable udf"
        community.general.modprobe:
            name: udf
            state: absent
        when: not system_is_container
  when:
      - amzn2023cis_rule_1_1_1_2
  tags:
      - level2-server
      - patch
      - rule_1.1.1.2
      - udf

- name: "1.1.1.3 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "1.1.1.3 | PATCH | Ensure mounting of cramfs filesystems is disable | Edit modprobe config"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: "install cramfs /bin/true"
            create: true
            mode: '0600'

      - name: "1.1.1.3 | PATCH | Ensure mounting of cramfs filesystems is disabled | blacklist"
        ansible.builtin.lineinfile:
            path: /etc/modprobe.d/blacklist.conf
            regexp: "^(#)?blacklist cramfs(\\s|$)"
            line: "blacklist cramfs"
            create: true
            mode: '0600'

      - name: "1.1.1.3 | PATCH | Ensure mounting of cramfs filesystems is disable | Disable cramfs"
        community.general.modprobe:
            name: cramfs
            state: absent
        when: not system_is_container
  when:
      - amzn2023cis_rule_1_1_1_3
  tags:
      - level2-server
      - patch
      - rule_1.1.1.3
      - cramfs
      - nist_sp800-53r5_CM-7



##### 1.1.3.x AUDIT for var partition
- name: "1.1.3.1 | AUDIT | Ensure separate partition exists for /var"
  block:
      - name: "1.1.3.1 | AUDIT | Ensure separate partition exists for /var | Absent"
        ansible.builtin.debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"

      - name: "1.1.3.1 | AUDIT | Ensure separate partition exists for /var | Present"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '1.1.3.1'
      required_mount: '/var'
  when:
      - required_mount not in mount_names
      - amzn2023cis_rule_1_1_3_1
  tags:
      - level2-server
      - patch
      - mounts
      - rule_1.1.3.1


######1.1.4.x auditing separate partition /var/tmp partition exists or not
- name: "1.1.4.1 | AUDIT | Ensure separate partition exists for /var/tmp"
  block:
      - name: "1.1.4.1 | AUDIT | Ensure separate partition exists for /var/tmp | Absent"
        ansible.builtin.debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"

      - name: "1.1.4.1 | AUDIT | Ensure separate partition exists for /var/tmp | Present"
        ansible.builtin.import_tasks:
            file: warning_facts.yml
  vars:
      warn_control_id: '1.1.4.1'
      required_mount: '/var/tmp'
  when:
      - required_mount not in mount_names
      - amzn2023cis_rule_1_1_4_1
  tags:
      - level2-server
      - audit
      - mounts
      - rule_1.1.4.1

#####1.1.5.x auditing separate partition /var/log partition exists or not
- name: "1.1.5.1 | AUDIT | Ensure separate partition exists for /var/log"
  block:
      - name: "1.1.5.1 | AUDIT | Ensure separate partition exists for /var/log | Absent"
        ansible.builtin.debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"

      - name: "1.1.5.1 | AUDIT | Ensure separate partition exists for /var/log | Present"
        ansible.builtin.import_tasks:
            file: warning_facts.yml

  vars:
      warn_control_id: '1.1.5.1'
      required_mount: '/var/log'
  when:
      - required_mount not in mount_names
      - amzn2023cis_rule_1_1_5_1
  tags:
      - level2-server
      - audit
      - mounts
      - rule_1.1.5.1
      - nist_sp800-53r5_CM-6


####1.1.6.x auditing separate partition /var/tmp partition exists or not

- name: "1.1.6.1 | AUDIT | Ensure separate partition exists for /var/log/audit"
  block:
      - name: "1.1.6.1 | AUDIT | Ensure separate partition exists for /var/log/audit | Absent"
        ansible.builtin.debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"

      - name: "1.1.6.1 | AUDIT | Ensure separate partition exists for /var/log/audit | Present"
        ansible.builtin.import_tasks:
            file: warning_facts.yml

  vars:
      warn_control_id: '1.1.6.1'
      required_mount: '/var/log/audit'
  when:
      - required_mount not in mount_names
      - amzn2023cis_rule_1_1_6_1
      
  tags:
      - level2-server
      - audit
      - mounts
      - rule_1.1.6.1
      - nist_sp800-53r5_CM-6

###1.1.1.7.x ensuring /home separate partition

- name: "1.1.7.1 | AUDIT | Ensure separate partition exists for /home"
  block:
      - name: "1.1.7.1 | AUDIT | Ensure separate partition exists for /home | Absent"
        ansible.builtin.debug:
            msg: "Warning!! {{ required_mount }} doesn't exist. This is a manual task"

      - name: "1.1.7.1 | AUDIT | Ensure separate partition exists for /home | Present"
        ansible.builtin.import_tasks:
            file: warning_facts.yml

  vars:
      warn_control_id: '1.1.7.1'
      required_mount: '/home'
  when:
      - required_mount not in mount_names
      - amzn2023cis_rule_1_1_7_1
  tags:
      - level2-server
      - audit
      - mounts
      - rule_1.1.7.1
      - nist_sp800-53r5_CM-6

##1.6.1.x setting selinux to enforcing status
- name: "1.6.1.5 | PATCH | Ensure the SELinux state is enforcing"
  ansible.posix.selinux:
      conf: /etc/selinux/config
      policy: "{{ amzn2023cis_selinux_pol }}"
      state: enforcing
  when:
      - not amzn2023cis_selinux_disable
      - amzn2023cis_selinux_enforce == 'enforcing'
      - amzn2023cis_rule_1_6_1_5
  tags:
      - level2-server
      - selinux
      - patch
      - rule_1.6.1.5
      - nist_sp800-53r5_AC-3
      - nist_sp800-53r5_SI-6



